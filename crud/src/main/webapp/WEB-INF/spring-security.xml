<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-4.1.xsd
   	http://www.springframework.org/schema/security
   	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<security:http pattern="/login*" security="none" />
	<security:http pattern="/resources*" security="none" />
	<security:http pattern="/resetPassword**" security="none" />

	<context:component-scan base-package="com.damiancyk" />

	<!-- <security:global-method-security secured-annotations="enabled" pre-post-annotations="enabled" 
		proxy-target-class="true" /> -->

	<security:global-method-security
		pre-post-annotations="enabled">
		<!-- <security:expression-handler ref="expressionHandler"/> -->
	</security:global-method-security>

	<bean id="UserDetailsServiceCustom" class="com.damiancyk.security.UserDetailsServiceCustom">
	</bean>
	<bean id="AuthenticationSuccessHandlerCustom"
		class="com.damiancyk.security.AuthenticationSuccessHandlerCustom">
	</bean>

	<bean id="switchUserProcessingFilter"
		class="org.springframework.security.web.authentication.switchuser.SwitchUserFilter">
		<property name="userDetailsService" ref="UserDetailsServiceCustom" />
		<property name="switchUserUrl" value="/j_spring_security_switch_user" />
		<property name="switchFailureUrl" value="/index?switch=error" />
		<property name="exitUserUrl" value="/j_spring_security_exit_user" />
		<property name="targetUrl" value="/index?switch=success" />
	</bean>

	<bean
		class="org.springframework.security.web.access.expression.WebExpressionVoter" />


	<security:http auto-config="true" use-expressions="true"
		access-denied-page="/accessDenied" access-decision-manager-ref="accessDecisionManager">

		<security:intercept-url pattern="/*"
			access="hasAnyRole('ADMIN_ROLE') and isAuthenticated" />

		<security:form-login login-page="/login"
			authentication-failure-url="/login?error=authentication_failure"
			default-target-url="/index?login=success"
			authentication-success-handler-ref="AuthenticationSuccessHandlerCustom" />

		<security:logout invalidate-session="true"
			logout-success-url="/login?logoutSuccess=true" logout-url="/logout" />

		<security:session-management
			invalid-session-url="/login?error=invalid_session_url"
			session-authentication-error-url="/login?error=already_login"
			session-fixation-protection="migrateSession">
			<security:concurrency-control
				max-sessions="10" expired-url="/login?error=session_expired_concurrency_control"
				error-if-maximum-exceeded="false" />
		</security:session-management>

		<security:custom-filter position="SWITCH_USER_FILTER"
			ref="switchUserProcessingFilter" />

	</security:http>

	<!-- Define custom Voter -->
	<bean id="suspendVoter" class="com.damiancyk.security.RealTimeVoter" />

	<!-- Define AccessDesisionManager as UnanimousBased -->
	<bean id="accessDecisionManager" class="org.springframework.security.access.vote.UnanimousBased">
		<property name="decisionVoters">
			<list>
				<ref bean="suspendVoter" />
				<bean class="org.springframework.security.access.vote.RoleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
			</list>
		</property>
	</bean>


	<!-- <security:authentication-manager> <security:authentication-provider> 
		<security:password-encoder hash="md5" /> <security:jdbc-user-service data-source-ref="dataSource" 
		users-by-username-query=" select email,pass,true from accounts where email=?" 
		authorities-by-username-query=" select a.login, at.account_type from accounts 
		a, account_type at where a.account_type = at.account_type and a.email =? 
		" /> </security:authentication-provider> </security:authentication-manager> -->

	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="UserDetailsServiceCustom">
			<security:password-encoder ref="passwordEncoder" />
		</security:authentication-provider>
	</security:authentication-manager>


	<bean
		class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"
		id="passwordEncoder" />

	<!-- <security:user-service id="userDetailsService"> <security:user name="admin" 
		password="21232f297a57a5a743894a0e4a801fc3" authorities="ROLE_USER,ROLE_ADMIN" 
		/> <security:user name="user" password="ee11cbb19052e40b07aac0ca060c23ee" 
		authorities="ROLE_USER" /> </security:user-service> -->

</beans>